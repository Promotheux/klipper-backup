[filament_motion_sensor FilamentMotionSensor]
detection_length: 4.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: P1.0 # Pin (Endstop-Pin)
pause_on_runout: false
runout_gcode: FILAMENT_ISRUNOUT
#insert_gcode:
#event_delay: 3.0
#pause_delay: 5
#   See the "filament_switch_sensor" section for a description of the
#   above parameters.

[gcode_macro M600]
gcode:
    ;{% set X = params.X|default(50)|float %}
    ;{% set Y = params.Y|default(0)|float %}
    ;{% set Z = params.Z|default(50)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    CLEAR_PAUSE
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z50 F600
    G90
    G1 X10 Y10 F10000
    G92
    G92 E0  
    ;G1 E-50 F1000
    ;G1 E-30 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[delayed_gcode RECHECK_FILAMENT_ISRUNOUT]
gcode:
  {% set runout_state = "deadtime" if printer.print_stats.print_duration < 30 else "runout" %}
  {% set runout_state = "not_printing" if printer.idle_timeout.state != "Printing" %}

  {% if runout_state == "deadtime" %} 
    ## During initial print dead time sensor value is not valid.
    { action_respond_info("No runout detection below 30 s print duration time.") }
  {% elif runout_state == "not_printing" %}
    ## Printer not in printing state
    { action_respond_info("No runout detection as printer is not in printing state.") }
  {% else %}
     { action_respond_info("Detected actual runout. Go to filament change position.") }
    M600 ; Go To Filament Change position
  {% endif %}
  

[gcode_macro FILAMENT_ISRUNOUT]
gcode:
  UPDATE_DELAYED_GCODE ID=RECHECK_FILAMENT_ISRUNOUT DURATION=5 ; Recheck after XXs duration
  { action_respond_info("Detected possible runout. Recheck runout sensor in 5s.") }